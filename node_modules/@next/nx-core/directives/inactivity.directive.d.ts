import { EventEmitter } from '@angular/core';
import 'rxjs/add/observable/interval';
import 'rxjs/add/operator/throttle';
import 'rxjs/add/operator/merge';
/**
 * Inactivity directive
 */
export declare class NxInactivityDirective {
    /**
     * Mouse move event emitter
     */
    private mousemove;
    /**
     * Mouse down event emitter
     */
    private mousedown;
    /**
     * Keypress event emitter
     */
    private keypress;
    /**
     * SetTimeout method id
     */
    private timeoutId;
    private aliveId;
    /**
     * Inactivity timeout limit (defaults 15 minutes)
     */
    ngxInactivity: number;
    /**
     * Inactivity interval (defaults 3000 ms)
     */
    ngxInactivityInterval: number;
    /**
     * Inactivity callback after timeout
     */
    ngxInactivityCallback: EventEmitter<{}>;
    /**
     * Still alive timeout
     */
    ngxAliveCallback: EventEmitter<{}>;
    /**
     * Attach a mouse move listener
     */
    onMousemove(event: any): void;
    /**
     * Atach a mouse down listener
     */
    onMousedown(event: any): void;
    /**
     * Attach a key press listener
     */
    onKeypress(event: any): void;
    constructor();
    /**
     * Start inactivity timer
     */
    start(): void;
    /**
     * Reset inactivity timer
     */
    reset(): void;
}
