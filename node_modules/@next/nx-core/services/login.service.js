import { Injectable } from '@angular/core';
import { Subject } from 'rxjs/Subject';
// import { identifierModuleUrl } from '@angular/compiler';
var LoginService = /** @class */ (function () {
    function LoginService() {
        this.subject = new Subject();
        this.keepAfterRouteChange = false;
        this.gotError = false;
        this.errorMessage = '';
    }
    LoginService.prototype.errorHndlr = function () {
        return this.subject.asObservable();
    };
    LoginService.prototype.setMessage = function (gotError, message) {
        if (message === void 0) { message = ''; }
        this.message(gotError, message);
    };
    LoginService.prototype.message = function (error, message, keepAfterRouteChange) {
        if (keepAfterRouteChange === void 0) { keepAfterRouteChange = false; }
        this.keepAfterRouteChange = keepAfterRouteChange;
        this.subject.next({ gotError: error, message: message });
    };
    LoginService.prototype.clear = function () {
        // clear message
        this.subject.next();
    };
    LoginService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    LoginService.ctorParameters = function () { return []; };
    return LoginService;
}());
export { LoginService };
//# sourceMappingURL=login.service.js.map