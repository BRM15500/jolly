import { Injectable } from '@angular/core';
import { Subject } from 'rxjs/Subject';
// import { identifierModuleUrl } from '@angular/compiler';
var ErrorStreamService = /** @class */ (function () {
    function ErrorStreamService() {
        this.subject = new Subject();
        this.keepAfterRouteChange = false;
        this.gotError = false;
        this.errorMessage = '';
    }
    ErrorStreamService.prototype.errorHandler = function () {
        return this.subject.asObservable();
    };
    ErrorStreamService.prototype.setMessage = function (status, message) {
        if (message === void 0) { message = ''; }
        this.message(status, message);
    };
    ErrorStreamService.prototype.message = function (status, message, keepAfterRouteChange) {
        if (keepAfterRouteChange === void 0) { keepAfterRouteChange = false; }
        this.keepAfterRouteChange = keepAfterRouteChange;
        this.subject.next({ status: status, message: message });
    };
    ErrorStreamService.prototype.clear = function () {
        // clear message
        this.subject.next();
    };
    ErrorStreamService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    ErrorStreamService.ctorParameters = function () { return []; };
    return ErrorStreamService;
}());
export { ErrorStreamService };
//# sourceMappingURL=error-stream.service.js.map