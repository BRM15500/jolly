import { OnInit, AfterViewInit, OnDestroy, EventEmitter } from '@angular/core';
import { ExampleDataSource } from './example-data';
import { Subject } from 'rxjs';
import { MatPaginator } from '@angular/material/paginator';
import { MatSort } from '@angular/material/sort';
import { SelectionModel } from '@angular/cdk/collections';
export declare class NxTableMasterDetailComponent implements OnInit, OnDestroy, AfterViewInit {
    config: object;
    dataSubject: Subject<any>;
    showEvent: EventEmitter<any>;
    selectEvent: EventEmitter<any>;
    showParentEvent: EventEmitter<any>;
    downloadEvent: EventEmitter<any>;
    printEvent: EventEmitter<any>;
    nxId: string;
    paginator: MatPaginator;
    sort: MatSort;
    selection: SelectionModel<any>;
    defaultConfig: any;
    baseConfig: any;
    detailConfig: {
        rowIconClass: string;
    };
    titles: any[];
    extendTitles: any[];
    expandedDetail: any[];
    exampleData: ExampleDataSource;
    expandedElement: any[];
    dataCollection: ExampleDataSource;
    prepositionLabel: string;
    pageIndex: number;
    private mergeObserver;
    constructor();
    updateManualPage(index: number): void;
    isExpansionDetailRow: (i: number, row: any) => boolean;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    prepareConfig(): object;
    /**
     * Paginate the data (client-side). If you're using server-side pagination,
     * this would be replaced by requesting the appropriate data from the server.
     */
    getPagedData(_data: any[]): any[];
    /**
     * Sort the data (client-side). If you're using server-side sorting,
     * this would be replaced by requesting the appropriate data from the server.
     */
    getSortedData(_data: any[]): any[];
    clickToggle(row: any, col: string): void;
    clickEvent(event: any): void;
    /** Whether the number of selected elements matches the total number of rows. */
    isAllSelected(): boolean;
    /** Selects all rows if they are not all selected; otherwise clear selection. */
    masterChecked(): void;
    rowChecked(item?: any, e?: any): void;
    showClick(_event: any): void;
    printClick(_event: any): void;
    downloadClick(_event: any): void;
    expandedRestore(): void;
}
