[{"__symbolic":"module","version":3,"metadata":{"NxTableMasterDetailComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"nx-table-master-detail","template":"\n    <div class=\"oss-table-container mat-elevation-z8\" id=\"{{nxId}}\">\n      <mat-table\n        matSort\n        [dataSource]=\"dataCollection\"\n        [class]=\"defaultConfig.styleClass\"\n      >\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"selectBox\">\n          <mat-header-cell *matHeaderCellDef>\n            <mat-checkbox\n              (change)=\"$event ? masterChecked() : null\"\n              [checked]=\"selection.hasValue() && isAllSelected()\"\n              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n            >\n            </mat-checkbox>\n          </mat-header-cell>\n          <mat-cell [class]=\"\" *matCellDef=\"let row\">\n            <mat-checkbox\n              (click)=\"$event.stopPropagation()\"\n              (change)=\"$event ? selection.toggle(row) : null; rowChecked(row, $event)\"\n              [checked]=\"selection.isSelected(row)\"\n            >\n            </mat-checkbox>\n          </mat-cell>\n        </ng-container>\n\n        <!-- Dynamic Columns -->\n        <ng-container matColumnDef=\"{{ col }}\" *ngFor=\"let col of titles\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header>\n            {{ defaultConfig.displayedColumns[col].title }}\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let element\" (click)=\"clickToggle(element, col)\">\n            <ng-template [ngIf]=\"col !== 'showDetail' && col !== 'actionCols'\">\n              <span [ngClass]=\"defaultConfig.displayedColumns[col].pipe === 'currency' && element[col] ? 'sign' : 'no-sign'\"></span>\n              {{ defaultConfig.displayedColumns[col].pipe === 'date' ?\n              (element[col] | date:defaultConfig.displayedColumns[col].format:'':(defaultConfig.locale ? defaultConfig.locale : 'en-US')) :\n              defaultConfig.displayedColumns[col].pipe === 'currency' ? (element[col] | currency : (defaultConfig.displayedColumns[col].format ? defaultConfig.displayedColumns[col].format : 'USD'):'symbol':'':(defaultConfig.locale ? defaultConfig.locale : 'en-US')) : element[col] }}\n            </ng-template>\n\n            <ng-template [ngIf]=\"col === 'actionCols' && defaultConfig.displayedColumns[col].description === undefined\">\n              <i [class]=\"defaultConfig.displayedColumns[col].class\"></i>\n            </ng-template>\n\n            <ng-template [ngIf]=\"col === 'actionCols' && defaultConfig.displayedColumns[col].description\">\n              <a [class]=\"defaultConfig.displayedColumns[col].class\">\n                {{ defaultConfig.displayedColumns[col].description }}\n              </a>\n            </ng-template>\n\n            <ng-template [ngIf]=\"col === 'showDetail'\">\n              <i [class]=\"defaultConfig.rowIconClass\"></i>\n            </ng-template>\n\n            <ng-template [ngIf]=\"defaultConfig.indicatorColumns.includes(col) && element.detailArrows\">\n              <i\n                class=\"icon ion-chevron-down indicator\"\n                [ngClass]=\"{\n                  'ion-chevron-down':\n                  expandedElement.indexOf(element.refId) === -1,\n                  'ion-chevron-up': expandedElement.indexOf(element.refId) !== -1\n                }\"\n              ></i>\n            </ng-template>\n          </mat-cell>\n        </ng-container>\n\n        <!-- Expanded Content Column - The detail row is made up of this one column -->\n        <ng-container matColumnDef=\"expandedDetail\">\n          <mat-cell *matCellDef=\"let detail\">\n            <ng-template [ngIf]=\"defaultConfig.type === 'rowTable'\">\n              <nx-table-row-detail-a\n                [content]=\"detail\"\n                [config]=\"defaultConfig\"\n                (clickEvent)=\"clickEvent($event)\"\n              ></nx-table-row-detail-a>\n            </ng-template>\n\n            <ng-template [ngIf]=\"defaultConfig.type === 'single'\">\n              <nx-table-row-detail-b\n                [content]=\"detail\"\n                [reference]=\"defaultConfig.buttonDisplayReference\"\n                (showEvent)=\"showClick($event)\"\n                (printEvent)=\"printClick($event)\"\n                (downloadEvent)=\"downloadClick($event)\"\n              ></nx-table-row-detail-b>\n            </ng-template>\n          </mat-cell>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"extendTitles\"></mat-header-row>\n        <mat-row\n          *matRowDef=\"let row; columns: extendTitles\"\n          matRipple\n          class=\"element-row\"\n          [class.expanded]=\"expandedElement.indexOf(row.refId) !== -1\"\n        ></mat-row>\n        <mat-row\n          *matRowDef=\"let row; columns: expandedDetail; when: isExpansionDetailRow\"\n          [@detailExpand]=\"\n          expandedElement.length > 0 && expandedElement.indexOf(row.parent.refId) !== -1\n              ? 'expanded'\n              : 'collapsed'\n          \"\n          style=\"overflow: hidden\"\n        >\n        </mat-row>\n      </mat-table>\n\n      <mat-paginator\n        #paginator\n        [ngStyle]=\"{ display: defaultConfig.pagination.visible ? 'block' : 'none' }\"\n        [pageIndex]=\"0\"\n        [pageSize]=\"this.defaultConfig.pagination.pageSize\"\n        [pageSizeOptions]=\"[10, 25, 50, 100, 200]\"\n      >\n      </mat-paginator>\n    </div>\n  ","animations":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger"},"arguments":["detailExpand",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state"},"arguments":["collapsed",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style"},"arguments":[{"height":"0px","minHeight":"0","visibility":"hidden"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state"},"arguments":["expanded",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style"},"arguments":[{"height":"*","visibility":"visible"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition"},"arguments":["expanded <=> collapsed",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate"},"arguments":["225ms cubic-bezier(0.4, 0.0, 0.2, 1)"]}]}]]}]}]}],"members":{"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataSubject":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"selectEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"showParentEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"downloadEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"printEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"nxId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"paginator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":[{"__symbolic":"reference","module":"@angular/material/paginator","name":"MatPaginator"}]}]}],"sort":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":[{"__symbolic":"reference","module":"@angular/material/sort","name":"MatSort"}]}]}],"__ctor__":[{"__symbolic":"constructor"}],"updateManualPage":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"prepareConfig":[{"__symbolic":"method"}],"getPagedData":[{"__symbolic":"method"}],"getSortedData":[{"__symbolic":"method"}],"clickToggle":[{"__symbolic":"method"}],"clickEvent":[{"__symbolic":"method"}],"isAllSelected":[{"__symbolic":"method"}],"masterChecked":[{"__symbolic":"method"}],"rowChecked":[{"__symbolic":"method"}],"showClick":[{"__symbolic":"method"}],"printClick":[{"__symbolic":"method"}],"downloadClick":[{"__symbolic":"method"}],"expandedRestore":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"NxTableMasterDetailComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"nx-table-master-detail","template":"\n    <div class=\"oss-table-container mat-elevation-z8\" id=\"{{nxId}}\">\n      <mat-table\n        matSort\n        [dataSource]=\"dataCollection\"\n        [class]=\"defaultConfig.styleClass\"\n      >\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"selectBox\">\n          <mat-header-cell *matHeaderCellDef>\n            <mat-checkbox\n              (change)=\"$event ? masterChecked() : null\"\n              [checked]=\"selection.hasValue() && isAllSelected()\"\n              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n            >\n            </mat-checkbox>\n          </mat-header-cell>\n          <mat-cell [class]=\"\" *matCellDef=\"let row\">\n            <mat-checkbox\n              (click)=\"$event.stopPropagation()\"\n              (change)=\"$event ? selection.toggle(row) : null; rowChecked(row, $event)\"\n              [checked]=\"selection.isSelected(row)\"\n            >\n            </mat-checkbox>\n          </mat-cell>\n        </ng-container>\n\n        <!-- Dynamic Columns -->\n        <ng-container matColumnDef=\"{{ col }}\" *ngFor=\"let col of titles\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header>\n            {{ defaultConfig.displayedColumns[col].title }}\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let element\" (click)=\"clickToggle(element, col)\">\n            <ng-template [ngIf]=\"col !== 'showDetail' && col !== 'actionCols'\">\n              <span [ngClass]=\"defaultConfig.displayedColumns[col].pipe === 'currency' && element[col] ? 'sign' : 'no-sign'\"></span>\n              {{ defaultConfig.displayedColumns[col].pipe === 'date' ?\n              (element[col] | date:defaultConfig.displayedColumns[col].format:'':(defaultConfig.locale ? defaultConfig.locale : 'en-US')) :\n              defaultConfig.displayedColumns[col].pipe === 'currency' ? (element[col] | currency : (defaultConfig.displayedColumns[col].format ? defaultConfig.displayedColumns[col].format : 'USD'):'symbol':'':(defaultConfig.locale ? defaultConfig.locale : 'en-US')) : element[col] }}\n            </ng-template>\n\n            <ng-template [ngIf]=\"col === 'actionCols' && defaultConfig.displayedColumns[col].description === undefined\">\n              <i [class]=\"defaultConfig.displayedColumns[col].class\"></i>\n            </ng-template>\n\n            <ng-template [ngIf]=\"col === 'actionCols' && defaultConfig.displayedColumns[col].description\">\n              <a [class]=\"defaultConfig.displayedColumns[col].class\">\n                {{ defaultConfig.displayedColumns[col].description }}\n              </a>\n            </ng-template>\n\n            <ng-template [ngIf]=\"col === 'showDetail'\">\n              <i [class]=\"defaultConfig.rowIconClass\"></i>\n            </ng-template>\n\n            <ng-template [ngIf]=\"defaultConfig.indicatorColumns.includes(col) && element.detailArrows\">\n              <i\n                class=\"icon ion-chevron-down indicator\"\n                [ngClass]=\"{\n                  'ion-chevron-down':\n                  expandedElement.indexOf(element.refId) === -1,\n                  'ion-chevron-up': expandedElement.indexOf(element.refId) !== -1\n                }\"\n              ></i>\n            </ng-template>\n          </mat-cell>\n        </ng-container>\n\n        <!-- Expanded Content Column - The detail row is made up of this one column -->\n        <ng-container matColumnDef=\"expandedDetail\">\n          <mat-cell *matCellDef=\"let detail\">\n            <ng-template [ngIf]=\"defaultConfig.type === 'rowTable'\">\n              <nx-table-row-detail-a\n                [content]=\"detail\"\n                [config]=\"defaultConfig\"\n                (clickEvent)=\"clickEvent($event)\"\n              ></nx-table-row-detail-a>\n            </ng-template>\n\n            <ng-template [ngIf]=\"defaultConfig.type === 'single'\">\n              <nx-table-row-detail-b\n                [content]=\"detail\"\n                [reference]=\"defaultConfig.buttonDisplayReference\"\n                (showEvent)=\"showClick($event)\"\n                (printEvent)=\"printClick($event)\"\n                (downloadEvent)=\"downloadClick($event)\"\n              ></nx-table-row-detail-b>\n            </ng-template>\n          </mat-cell>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"extendTitles\"></mat-header-row>\n        <mat-row\n          *matRowDef=\"let row; columns: extendTitles\"\n          matRipple\n          class=\"element-row\"\n          [class.expanded]=\"expandedElement.indexOf(row.refId) !== -1\"\n        ></mat-row>\n        <mat-row\n          *matRowDef=\"let row; columns: expandedDetail; when: isExpansionDetailRow\"\n          [@detailExpand]=\"\n          expandedElement.length > 0 && expandedElement.indexOf(row.parent.refId) !== -1\n              ? 'expanded'\n              : 'collapsed'\n          \"\n          style=\"overflow: hidden\"\n        >\n        </mat-row>\n      </mat-table>\n\n      <mat-paginator\n        #paginator\n        [ngStyle]=\"{ display: defaultConfig.pagination.visible ? 'block' : 'none' }\"\n        [pageIndex]=\"0\"\n        [pageSize]=\"this.defaultConfig.pagination.pageSize\"\n        [pageSizeOptions]=\"[10, 25, 50, 100, 200]\"\n      >\n      </mat-paginator>\n    </div>\n  ","animations":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger"},"arguments":["detailExpand",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state"},"arguments":["collapsed",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style"},"arguments":[{"height":"0px","minHeight":"0","visibility":"hidden"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state"},"arguments":["expanded",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style"},"arguments":[{"height":"*","visibility":"visible"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition"},"arguments":["expanded <=> collapsed",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate"},"arguments":["225ms cubic-bezier(0.4, 0.0, 0.2, 1)"]}]}]]}]}]}],"members":{"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataSubject":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"selectEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"showParentEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"downloadEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"printEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"nxId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"paginator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":[{"__symbolic":"reference","module":"@angular/material/paginator","name":"MatPaginator"}]}]}],"sort":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":[{"__symbolic":"reference","module":"@angular/material/sort","name":"MatSort"}]}]}],"__ctor__":[{"__symbolic":"constructor"}],"updateManualPage":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"prepareConfig":[{"__symbolic":"method"}],"getPagedData":[{"__symbolic":"method"}],"getSortedData":[{"__symbolic":"method"}],"clickToggle":[{"__symbolic":"method"}],"clickEvent":[{"__symbolic":"method"}],"isAllSelected":[{"__symbolic":"method"}],"masterChecked":[{"__symbolic":"method"}],"rowChecked":[{"__symbolic":"method"}],"showClick":[{"__symbolic":"method"}],"printClick":[{"__symbolic":"method"}],"downloadClick":[{"__symbolic":"method"}],"expandedRestore":[{"__symbolic":"method"}]}}}}]