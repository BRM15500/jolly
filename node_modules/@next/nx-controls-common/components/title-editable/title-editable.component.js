import { Component, ViewChild, Output, EventEmitter, Input } from '@angular/core';
var TitleEditableComponent = /** @class */ (function () {
    function TitleEditableComponent() {
        this.saveEvent = new EventEmitter();
        this.titleChange = new EventEmitter();
        this.nxId = 'nx-title-editable';
        this.maxLengthInput = 100;
        this.editing = false;
    }
    TitleEditableComponent.prototype.ngOnInit = function () { };
    TitleEditableComponent.prototype.editEvent = function () {
        var _this = this;
        this.editing = true;
        setTimeout(function () {
            _this.trgFocusEl.nativeElement.focus();
        }, 30);
    };
    TitleEditableComponent.prototype.cancelEvent = function () {
        this.editing = false;
    };
    TitleEditableComponent.prototype.keyupEvent = function (e) {
        if (e.keyCode === 13) {
            var val = {
                description: this.title.description,
                note: this.title.note,
                newAlias: this.trgFocusEl.nativeElement.value
            };
            this.saveEvent.emit(val);
            this.titleChange.emit({ description: val.newAlias, note: val.note });
            // this.title.description = val.newAlias;
            // this.description = this.title.description;
            // this.note = this.title.note;
            // this.value = data[this.arrowkeyLocation][this.fieldsShow[0]];
            this.trgFocusEl.nativeElement.value = '';
            this.editing = false;
        }
    };
    TitleEditableComponent.prototype.compareFn = function (x, y) {
        // return x && y ? x.id === y.id : x === y;
        return x && y ? x.value === y.value : x === y;
    };
    TitleEditableComponent.prototype.setNote = function (note) {
        this.note = note;
    };
    TitleEditableComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-title-editable',
                    template: "\n    <div class=\"oss-te\" id=\"{{nxId}}\">\n      <div>\n        <h2 [ngClass]=\"{ hidden: editing }\">{{ title.description }}</h2>\n        <input\n          #boxy\n          [ngClass]=\"{ active: editing }\"\n          type=\"text\"\n          (keyup)=\"keyupEvent($event)\"\n          class=\"oss-te-edit-box\"\n          [maxLength]=\"maxLengthInput\"\n        />\n\n        <button\n          *ngIf=\"!editing\"\n          (click)=\"editEvent()\"\n          class=\"clear oss-te-edit-btn\"\n        >\n          <i class=\"icon ion-edit\"></i>\n        </button>\n        <button\n          *ngIf=\"editing\"\n          (click)=\"cancelEvent()\"\n          class=\"clear oss-te-edit-btn\"\n        >\n          <i class=\"icon ion-close\"></i>\n        </button>\n      </div>\n      <h3>{{ title.note }}</h3>\n    </div>\n  "
                },] },
    ];
    /** @nocollapse */
    TitleEditableComponent.ctorParameters = function () { return []; };
    TitleEditableComponent.propDecorators = {
        'trgFocusEl': [{ type: ViewChild, args: ['boxy',] },],
        'saveEvent': [{ type: Output },],
        'title': [{ type: Input },],
        'titleChange': [{ type: Output },],
        'placeholder': [{ type: Input },],
        'nxId': [{ type: Input },],
        'maxLengthInput': [{ type: Input },],
    };
    return TitleEditableComponent;
}());
export { TitleEditableComponent };
//# sourceMappingURL=title-editable.component.js.map