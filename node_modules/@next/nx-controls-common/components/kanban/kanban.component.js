import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Router } from '@angular/router';
var KanbanComponent = /** @class */ (function () {
    function KanbanComponent(router) {
        this.router = router;
        this.hideLauncher = false;
        this.launch = new EventEmitter();
        this.afterClick = new EventEmitter();
        this.nxId = 'nx-kanban';
        this.itemCounter = 0;
    }
    KanbanComponent.prototype.ngOnInit = function () {
        // this.data = this.groupBy(this.columns, this.collection);
        var kanbanArray = document.getElementsByClassName('kanban');
        var kanban = kanbanArray[0];
        this.maxHeight = kanban.offsetTop;
    };
    KanbanComponent.prototype.ngOnChanges = function (changes) {
        if (changes['collection']) {
            this.data = this.groupBy(this.columns, this.collection);
        }
    };
    KanbanComponent.prototype.setCollection = function (_data) {
        // this.data = this.groupBy(this.columns, _data);
    };
    KanbanComponent.prototype.groupBy = function (_h, _d) {
        _h.forEach(function (column) {
            _d.forEach(function (item) {
                if (column.key === item.type) {
                    column.data.push(item);
                }
            });
        });
        return _h;
    };
    KanbanComponent.prototype.launchEvent = function (e) {
        this.launch.emit(e);
    };
    KanbanComponent.prototype.cardEvent = function (e, i) {
        this.afterClick.emit(i);
    };
    KanbanComponent.prototype.goForward = function (id) {
        this.router.navigate([this.route + '/' + id]);
    };
    KanbanComponent.prototype.showLauncher = function (index) {
        if (index === 0 && this.hideLauncher === false) {
            return true;
        }
        else {
            return false;
        }
    };
    KanbanComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-kanban',
                    template: "\n    <div class=\"kanban\" id=\"{{nxId}}\">\n    <div class=\"kanban-row\">\n      <div *ngFor=\"let c of data\" class=\"kanban-col\">\n        <div class=\"panel\">\n          <div class=\"panel-heading\">\n            <span style=\"font-weight: bold;\">{{ c.title }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"kanban-row\">\n      <div *ngFor=\"let c of columns; let i = index\" class=\"kanban-col\" [ngStyle]=\"{'max-height': 'calc(100vh - ' + maxHeight + 'px - 30px'}\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <ul>\n              <li *ngIf=\"showLauncher(i)\" class=\"kanban-launcher\" (click)=\"launchEvent($event)\">\n                  <h4>{{ launcher_label }}</h4>\n                  <span>+</span>\n              </li>\n              <ng-container *ngFor=\"let d of c.data\">\n                <li *ngIf=\"d.type == c.key\" class=\"kanban-item\" [ngClass]=\"{'warning': d.warning}\" (click)=\"cardEvent($event, d)\">\n                    <div *ngIf=\"!d.warning\" class=\"progress-bar\" [ngStyle]=\"{'width': d.progress + '%'}\"></div>\n                    <h5 class=\"title\">{{ d.title }}</h5>\n                    <b>{{d.description}}</b>\n                    <h5>{{d.note}}</h5>\n                    <span *ngIf=\"d.badge > 0\" class=\"badge\">{{d.badge}}</span>\n                    <div class=\"check-mark\">\n                      <i *ngIf=\"d.assigned > 0\" class=\"icon ion-checkmark-circled\"></i>\n                    </div>\n                </li>\n              </ng-container>\n\n              <nx-kanban-empty *ngIf=\"c.data.length <= 0\"></nx-kanban-empty>\n            </ul>\n          </div> <!-- .card-body -->\n        </div> <!-- .card -->\n      </div> <!-- .column -->\n    </div>\n    </div>\n  ",
                    styles: ["\n\n  "]
                },] },
    ];
    /** @nocollapse */
    KanbanComponent.ctorParameters = function () { return [
        { type: Router, },
    ]; };
    KanbanComponent.propDecorators = {
        'collection': [{ type: Input },],
        'columns': [{ type: Input },],
        'launcher_label': [{ type: Input },],
        'route': [{ type: Input },],
        'hideLauncher': [{ type: Input },],
        'launch': [{ type: Output },],
        'afterClick': [{ type: Output },],
        'nxId': [{ type: Input },],
    };
    return KanbanComponent;
}());
export { KanbanComponent };
//# sourceMappingURL=kanban.component.js.map