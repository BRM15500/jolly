import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Router } from '@angular/router';
var MenuComponent = /** @class */ (function () {
    /**
     * Component constructor with injected dependencies.
     * @param appService
     */
    function MenuComponent(router) {
        this.router = router;
        this.focus = false;
        this.activeMenu = false;
        this.activeSearch = false;
        this.launch = new EventEmitter();
        this.nxId = 'nx-sidebar-menu';
        this.activeSidebar = true;
    }
    MenuComponent.prototype.openSearch = function (active) {
        this.activeSearch = active;
        this.activeMenu = false;
        this.focus = active;
        this.launch.emit(active);
    };
    MenuComponent.prototype.openMenu = function (active) {
        this.launch.emit(false);
        this.activeSearch = false;
        this.activeMenu = active;
        this.focus = active; // there is something wrong here
    };
    MenuComponent.prototype.clickEvent = function (route) {
        this.openMenu(false);
        this.router.navigate([route]);
    };
    /**
     * Implements onInit event handler.
     */
    MenuComponent.prototype.ngOnInit = function () { };
    MenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-menu',
                    styles: ["\n\n  "],
                    template: "\n    <nav id=\"{{nxId}}\" *ngIf=\"activeSidebar\" class=\"nav-menu\" [ngClass]=\"{ 'nav-menu-active': focus == true }\">\n      <div class=\"nav-content\">\n        <ul>\n          <li class=\"title\">\n            <span>{{title}}</span>\n          </li>\n          <li>\n            <i class=\"icon ion-ios-albums-outline\"></i>\n          </li>\n          <li>\n            <i id=\"search-toggle-menu\" class=\"icon\" (click)=\"openSearch(!activeSearch)\" [ngClass]=\"{'ion-android-close': activeSearch == true, 'ion-ios-search': activeSearch == false}\"></i>\n          </li>\n          <li>\n            <i id=\"nav-toggle-menu\" class=\"icon\" (click)=\"openMenu(!activeMenu)\" [ngClass]=\"{'ion-android-close': activeMenu == true, 'ion-grid': activeMenu == false}\"></i>\n          </li>\n        </ul>\n      </div>\n    </nav>\n\n    <div [ngClass]=\"{'modal-active': activeMenu == true}\" class=\"menu-modal\" id=\"{{nxId}}-modal\">\n      <div class=\"menu-wrapper\">\n        <div class=\"menu-left\">\n          <ul>\n            <li\n            *ngFor=\"let item of favsItems\"\n            [ngClass]=\"{'title': item.isTitle == true}\"\n            (click)=\"clickEvent(item.route)\">\n                {{item.description}}\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"menu-content\">\n          <div class=\"menu-card-header\">Header</div>\n          <div class=\"menu-card-items\">\n            <div *ngFor=\"let c of menuItems\">\n              <ul>\n                <li *ngFor=\"let item of c.content\" [ngClass]=\"{'title': item.isTitle == true}\">{{item.content}}</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ",
                },] },
    ];
    /** @nocollapse */
    MenuComponent.ctorParameters = function () { return [
        { type: Router, },
    ]; };
    MenuComponent.propDecorators = {
        'menuItems': [{ type: Input },],
        'favsItems': [{ type: Input },],
        'focus': [{ type: Input },],
        'activeMenu': [{ type: Input },],
        'activeSearch': [{ type: Input },],
        'launch': [{ type: Output },],
        'title': [{ type: Input },],
        'nxId': [{ type: Input },],
    };
    return MenuComponent;
}());
export { MenuComponent };
//# sourceMappingURL=menu.component.js.map