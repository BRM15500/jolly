import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Router } from '@angular/router';
var FinderComponent = /** @class */ (function () {
    /**
     * Component constructor with injected dependencies.
     * @param appService
     */
    function FinderComponent(router) {
        this.router = router;
        this.collection = [];
        this.keyUp = new EventEmitter();
        this.findClick = new EventEmitter();
        this.afterClick = new EventEmitter();
        this.newClick = new EventEmitter();
        this.config = {};
        this.nxId = 'nx-finder';
    }
    /**
     * Implements onInit event handler.
     */
    FinderComponent.prototype.ngOnInit = function () { };
    FinderComponent.prototype.keyupEvent = function (e) {
        this.keyUp.emit(e.target.value);
    };
    FinderComponent.prototype.clickEvent = function (e) {
        this.afterClick.emit(e);
        // this.collection = [];
        // this.value = e[this.fieldsShow[0]];
    };
    FinderComponent.prototype.closeEvent = function () {
        this.active = false;
        this.router.navigate([this.route]);
    };
    FinderComponent.prototype.findEvent = function () {
        this.findClick.emit(this.value);
    };
    FinderComponent.prototype.clearEvent = function () {
        this.value = '';
        this.findClick.emit(this.value);
    };
    FinderComponent.prototype.newEvent = function () {
        this.newClick.emit('ok');
    };
    FinderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-finder',
                    styles: ["\n\n  "],
                    template: "\n    <div [ngClass]=\"{'search-modal-active': active == 1}\" class=\"modal\" id=\"{{nxId}}\">\n      <div class=\"search-wrapper\">\n        <header>\n          <div class=\"grid-3_xs-1\">\n            <div class=\"col\">\n              <h1>{{config.title}}</h1>\n            </div>\n            <div class=\"col\"></div>\n            <div class=\"col\" style=\"text-align: center;\">\n              <button class=\"primary outline\" (click)=\"newEvent()\">{{config.newButtonTitle}}</button>\n              <i class=\"icon ion-android-close finder-close-cross-bg\" (click)=\"closeEvent()\"></i>\n            </div>\n          </div>\n        </header>\n        <div class=\"search-content\">\n          <div>\n            <b>Resultado</b>\n          </div>\n          <div>\n            <table class=\"search-data-table\">\n              <thead>\n                <tr *ngIf=\"collection.length > 0\">\n                  <th *ngFor=\"let h of headers\">\n                    {{h.title}}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let d of collection\">\n                  <td *ngFor=\"let h of headers\">\n                        <span (click)=\"clickEvent(d)\">{{d[h.code]}}</span>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <div class=\"grid-3_xs-1\" *ngIf=\"collection.length === 0\">\n              <div class=\"col\">\n                <h5 class=\"text-danger\">{{config.emptyDataLabel}}</h5>\n              </div>\n              <div class=\"col\"></div>\n              <div class=\"col\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"search-controls\">\n        <label for=\"ctrl-main-searcher\" class=\"main-searcher-label\">Buscador</label>\n        <input id=\"ctrl-main-searcher\" class=\"main-searcher\" type=\"text\" [ngModel]=\"value\" (ngModelChange)=\"value = $event\" (keyup)=\"keyupEvent($event)\">\n\n        <i class=\"icon ion-android-close\" tabindex=\"0\" (click)=\"clearEvent()\"></i>\n        <span class=\"main-searcher-xs-label\" (click)=\"clearEvent()\">Cancelar</span>\n        <button class=\"main-searcher-button\" (click)=\"findEvent()\">\n          <i class=\"icon ion-ios-search\"></i>\n        </button>\n        <div class=\"main-searcher-bottom-line\"></div>\n      </div>\n    </div>\n  "
                },] },
    ];
    /** @nocollapse */
    FinderComponent.ctorParameters = function () { return [
        { type: Router, },
    ]; };
    FinderComponent.propDecorators = {
        'collection': [{ type: Input },],
        'headers': [{ type: Input },],
        'active': [{ type: Input },],
        'route': [{ type: Input },],
        'keyUp': [{ type: Output },],
        'findClick': [{ type: Output },],
        'afterClick': [{ type: Output },],
        'newClick': [{ type: Output },],
        'value': [{ type: Input },],
        'config': [{ type: Input },],
        'nxId': [{ type: Input },],
    };
    return FinderComponent;
}());
export { FinderComponent };
//# sourceMappingURL=finder.component.js.map