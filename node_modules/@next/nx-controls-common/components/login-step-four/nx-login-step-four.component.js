import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';
import { Router } from '@angular/router';
var NxLoginStepFourComponent = /** @class */ (function () {
    function NxLoginStepFourComponent(router) {
        this.router = router;
        this.helpEvent = new EventEmitter();
        this.recoveryEvent = new EventEmitter();
        this.nextEvent = new EventEmitter();
        this.cancelEvent = new EventEmitter();
        this.redirectEvent = new EventEmitter();
        this.geoAuth = new EventEmitter();
        this.onBlur = new EventEmitter();
        this.flag = true;
        this.lockMessage = {
            title: 'Importante',
            description: 'La banca empresarial se encuentra fuera de servicio, por favor vuelve a intentarlo más tarde '
        };
        this.inputSettings = {
            inputLabel: '',
            inputMinChars: 0,
            inputMaxChars: 0,
            browserVersionsRef: ''
        };
        this.inputSettingsToken = {
            inputLabel: '',
            inputMinChars: 0,
            inputMaxChars: 0,
            browserVersionsRef: ''
        };
        this.aviso = {
            primero: "Tu Banca Electrónica NUNCA te pedirá:",
            lista1: "-Usuario, contraseña o token por correo o vía telefónica.",
            lista2: "-Información personal o confidencial por ningún medio.",
            lista3: "-Instalar software o descargar aplicaciones/archivos en tu computadora.",
            ultimo: "Mantén actualizado tu antivirus y consulta los consejos básicos de seguridad en nuestro portal en la sección Conoce más > Seguridad Digital."
        };
        this.muestraAviso = true;
        this.errorMsg = '';
        this.errorMsgChange = new EventEmitter();
        this.logoUrl = '/assets/img/logo.png';
        this.geoCheckAuth = false;
        this.geoLocation = {
            banca: 'Banregio',
            pdf1: '../../../../assets/test.pdf',
            pdf2: '../../../../assets/test.pdf',
        };
        this.contactInfo = [
            { place: 'Monterrey', phone: '2267 3446', description: '(BANREGIO)' },
            { place: 'Resto del país', phone: '01 81 2267 3446', description: '(BANREGIO)' },
            { place: 'EUA y Canadá', phone: '1 866 4320 550', description: '' }
        ];
        this.errorBrowserMsg = '';
        this.disabledBtn = true;
        this.geoCheck = true;
        this.unamePattern = '^[a-z0-9_-]{8,15}$';
        this.token = '';
        this.notMeUrl = '/';
    }
    NxLoginStepFourComponent.prototype.ngOnInit = function () {
        this.trgFocusEl.nativeElement.focus();
        this.checkBrowsers();
    };
    NxLoginStepFourComponent.prototype.helpClick = function (e) {
        this.recoveryEvent.emit(e);
    };
    NxLoginStepFourComponent.prototype.nextClick = function (e) {
        var body = {
            password: this.password,
            token: this.token
        };
        this.nextEvent.emit(body);
    };
    NxLoginStepFourComponent.prototype.geoAuthEvent = function (e) {
        this.geoAuth.emit(this.geoCheck);
    };
    NxLoginStepFourComponent.prototype.cancelClick = function (e) {
        this.cancelEvent.emit(e);
        // this.router.navigate([this.notMeUrl]);
    };
    NxLoginStepFourComponent.prototype.redirectClick = function (e) {
        this.redirectEvent.emit(e);
    };
    NxLoginStepFourComponent.prototype.keyupEvent = function (e) {
        this.errorMsg = '';
        this.errorMsgChange.emit(this.errorMsg);
        if (this.password.length >= this.inputSettings.inputMinChars && this.token.length >= this.inputSettingsToken.inputMinChars) {
            this.disabledBtn = false;
        }
        else {
            if (e.keyCode === 13 || e.code === 'Enter') {
                this.trgFocusElToken.nativeElement.focus();
            }
            this.disabledBtn = true;
        }
        if (this.password.length > this.inputSettings.inputMaxChars) {
            this.password = this.password.substr(0, this.inputSettings.inputMaxChars);
        }
    };
    NxLoginStepFourComponent.prototype.onBlurPassword = function (e) {
        this.onBlur.emit(e);
    };
    NxLoginStepFourComponent.prototype.keyupTokenEvent = function (e) {
        // const e = evento as KeyboardEvent;
        this.errorMsg = '';
        this.errorMsgChange.emit(this.errorMsg);
        if (this.token.length >= this.inputSettingsToken.inputMinChars && this.password.length >= this.inputSettings.inputMinChars) {
            this.disabledBtn = false;
            if (e.keyCode === 13 || e.code === 'Enter') {
                this.nextClick(e);
            }
        }
        else {
            this.disabledBtn = true;
        }
        if (this.token.length > this.inputSettingsToken.inputMaxChars) {
            this.token = this.token.substr(0, this.inputSettingsToken.inputMaxChars);
        }
    };
    NxLoginStepFourComponent.prototype.keypressEvent = function (evento) {
        var e = evento;
        var validkeys = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];
        if (validkeys.indexOf(e.key) >= 0 || (e.keyCode === 13 || e.code === 'Enter')) {
            if ((e.keyCode === 13 || e.code === 'Enter') && this.disabledBtn === false) {
                this.nextClick(e);
            }
        }
        else {
            e.preventDefault();
        }
    };
    NxLoginStepFourComponent.prototype.onPaste = function (e) {
        if (e && e.target) {
            this.password = e.target.value;
            e['keyCode'] = 0;
            this.keyupEvent(e);
        }
    };
    NxLoginStepFourComponent.prototype.onPasteToken = function (e) {
        if (e && e.target) {
            this.token = e.target.value;
            e['keyCode'] = 0;
            this.keyupTokenEvent(e);
        }
    };
    NxLoginStepFourComponent.prototype.checkBrowsers = function () {
        var sayswho = (function () {
            var ua = navigator.userAgent, tem, M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
            if (/trident/i.test(M[1])) {
                tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
                return 'IE ' + (tem[1] || '');
            }
            if (M[1] === 'Chrome') {
                tem = ua.match(/\b(OPR|Edge)\/(\d+)/);
                if (tem != null)
                    return tem
                        .slice(1)
                        .join(' ')
                        .replace('OPR', 'Opera');
            }
            M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
            if ((tem = ua.match(/version\/(\d+)/i)) != null)
                M.splice(1, 1, tem[1]);
            return M.join(' ');
        })();
        if (sayswho.indexOf('Opera') > -1 ||
            sayswho.indexOf('IE ') > -1) {
            this.errorBrowserMsg =
                'versiones soportadas.';
        }
        else {
            var _version = sayswho.length > 4 ? sayswho.split(' ') : ['', '70'];
            // console.log(+_version[1]);
            if (+_version[1] < 45 && _version[0] != 'Safari') {
                this.errorBrowserMsg =
                    'versiones soportadas.';
            }
        }
        var browserData = sayswho.length > 4 ? sayswho.split(' ') : ['', '70'];
        if (browserData[0] === 'Chrome' && parseInt(browserData[1]) <= 50) {
            this.errorBrowserMsg = 'versiones soportadas';
        }
    };
    NxLoginStepFourComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-login-step-four',
                    template: "\n    <div class=\"login-container\">\n        <div class=\"login-banner\"><img src=\"{{ logoUrl }}\" alt=\"\" /></div>\n        <div class=\"login\">\n       \n            <div class=\"grid\">\n                <div class=\"col-12\">\n                    <div class=\"login-title\">\n                        <div class=\"login-steps\">\n                            <span> </span> <span class=\"active\"> </span> <span> </span>\n                        </div>\n                        <h2>Iniciar sesi\u00F3n</h2>\n                    </div>\n                </div>\n                <div class=\"col-12\" *ngIf=\"errorBrowserMsg.length > 0\">\n                    <div class=\"nx--alert-danger\">\n                        <span>\n                Su navegador no cumple con las\n                <a href=\"{{ inputSettings.browserVersionsRef }}\">{{\n                  errorBrowserMsg\n                }}</a>\n                Algunas funciones podrian no estar disponibles.\n              </span>\n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <div class=\"login-sub-title\">\n                        <h3>\n                            Hola <mark>{{ userName }}</mark>\n                        </h3>\n                        <a (click)=\"helpClick($event)\">C\u00F3mo entro?</a>\n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <div class=\"login-sub-title\">\n                        <h4>{{ inputSettings.inputLabel }}</h4>\n                        <a (click)=\"helpClick($event)\">C\u00F3mo entro?</a>\n                        <a class=\"link\" (click)=\"helpClick($event)\" style=\"cursor: pointer;\">Olvid\u00E9 mi contrase\u00F1a</a>\n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <div class=\"login-content\">\n                        <input id=\"nx-login-password\" type=\"password\" maxlength=\"{{ inputSettings.inputMaxChars }}\" [ngModel]=\"password\" (ngModelChange)=\"password = $event\" (keyup)=\"keyupEvent($event)\" (paste)=\"onPaste($event)\" (blur)=\"onBlurPassword($event)\" #userPassword  />\n                        <div class=\"nx-link dark\" (click)=\"redirectClick($event)\"> \u00A1No soy yo!</div>\n                    </div>\n                    <div class=\"recovery-pass\">\n                        <a class=\"link\" (click)=\"helpClick($event)\" style=\"cursor: pointer;\">Olvid\u00E9 mi contrase\u00F1a</a>\n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <div class=\"login-sub-title\">\n                        <h4>{{ inputSettingsToken.inputLabel }}</h4>\n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <div class=\"login-content\">\n                        <input id=\"nx-login-token\" type=\"password\" [pattern]=\"unamePattern\" maxlength=\"{{ inputSettingsToken.inputMaxChars }}\" [ngModel]=\"token\" (ngModelChange)=\"token = $event\" (keypress)=\"keypressEvent($event)\" (keyup)=\"keyupTokenEvent($event)\" (paste)=\"onPasteToken($event)\"\n                        #userToken />\n                        <h5 class=\"login-error-message\" *ngIf=\"errorMsg\">{{ errorMsg }}</h5>\n                    </div>\n                </div>\n                <div *ngIf=\"!flag\" class=\"lock-password\">\n                    <div class='title'>\n                        <h2> {{lockMessage.title}}</h2>\n                    </div>\n                    <div class=\"description\">\n                        <i class=\"icon ion-android-warning\"></i>\n                        <p>{{lockMessage.description}}</p>    \n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <div *ngIf=\"geoCheckAuth\"  class=\"geolocation-box\">\n                        <mat-checkbox class=\"check\" (change)=\"geoAuthEvent($event)\" [(ngModel)]=\"geoCheck\">\n                            <span class=\"text\">Autorizo a {{geoLocation.banca}} para recabar y utilizar la Geolocalizaci\u00F3n de mi dispositivo en t\u00E9rminos de lo consignado en el <a [href]=\"geoLocation.pdf1\" target=\"_blank\">Aviso de Privacidad</a> y <a [href]=\"geoLocation.pdf2\" target=\"_blank\">Aviso Legal</a>.</span>\n                        </mat-checkbox>\n                    </div>\n\n                    <div class=\"login-bottom\">\n                        <div class=\"nx-link dark\" (click)=\"cancelClick($event)\"> Cancelar Ingreso</div>\n\n                        <button id=\"nx-login-next-btn\" class=\"primary\" [disabled]=\"disabledBtn\" (click)=\"nextClick($event)\">\n                            Continuar\n                        </button>\n                        <button id=\"nx-login-next-btn\" class=\"default responsive no-soy-yo\" (click)=\"cancelClick($event)\">Cancelar Ingreso</button>\n                        <button id=\"nx-login-next-btn\" class=\"default responsive no-soy-yo\" (click)=\"redirectClick($event)\">\u00A1No soy yo!</button>\n                    </div>\n\n                    <div class=\"warning\">\n                        <h4 class=\"warning-pass\"> <i class=\"icon ion-android-alert\"></i> Importante</h4>\n                        <span class=\"description\">{{aviso.primero}}<br></span>\n                        <span class=\"description\">&nbsp;{{aviso.lista1}}<br>&nbsp;{{aviso.lista2}}<br>&nbsp;{{aviso.lista3}}<br></span>\n                        <br>\n                        <span class=\"description\">{{aviso.ultimo}}</span>\n                    </div>\n                </div>\n            </div> \n        </div>\n\n   \n        <div class=\"login-footer\">\n            <div class=\"title\">\n                Si lo necesitas, ll\u00E1manos. Con gusto te atenderemos.\n            </div>\n            <div class=\"grid-3\">\n                <div class=\"col\" *ngFor=\"let item of contactInfo\">\n                    <span>{{ item.place }}</span>\n                    <span class=\"color-light\">{{ item.phone }}</span>\n                    <span>{{ item.description }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n  ",
                    styles: ["\n\n  "]
                },] },
    ];
    /** @nocollapse */
    NxLoginStepFourComponent.ctorParameters = function () { return [
        { type: Router, },
    ]; };
    NxLoginStepFourComponent.propDecorators = {
        'trgFocusEl': [{ type: ViewChild, args: ['userPassword',] },],
        'trgFocusElToken': [{ type: ViewChild, args: ['userToken',] },],
        'helpEvent': [{ type: Output },],
        'recoveryEvent': [{ type: Output },],
        'nextEvent': [{ type: Output },],
        'cancelEvent': [{ type: Output },],
        'redirectEvent': [{ type: Output },],
        'geoAuth': [{ type: Output },],
        'onBlur': [{ type: Output },],
        'userName': [{ type: Input },],
        'notMeUrl': [{ type: Input },],
        'flag': [{ type: Input },],
        'lockMessage': [{ type: Input },],
        'inputSettings': [{ type: Input },],
        'inputSettingsToken': [{ type: Input },],
        'aviso': [{ type: Input },],
        'muestraAviso': [{ type: Input },],
        'errorMsg': [{ type: Input },],
        'errorMsgChange': [{ type: Output },],
        'logoUrl': [{ type: Input },],
        'geoCheckAuth': [{ type: Input },],
        'geoLocation': [{ type: Input },],
        'contactInfo': [{ type: Input },],
    };
    return NxLoginStepFourComponent;
}());
export { NxLoginStepFourComponent };
//# sourceMappingURL=nx-login-step-four.component.js.map