import { Component, Input, Output, EventEmitter } from '@angular/core';
var NxTableRowDetailBComponent = /** @class */ (function () {
    function NxTableRowDetailBComponent() {
        this.showEvent = new EventEmitter();
        this.downloadEvent = new EventEmitter();
        this.printEvent = new EventEmitter();
        this.detailKeys = [];
    }
    NxTableRowDetailBComponent.prototype.ngOnInit = function () {
        // console.log(this.content);
        // if (this.content.detail) {
        //   Object.keys(this.content.detail).forEach((key: any) => {
        //     this.detailKeys.push(key);
        //   });
        // }
    };
    NxTableRowDetailBComponent.prototype.showClick = function (_event) {
        this.showEvent.emit(_event);
    };
    NxTableRowDetailBComponent.prototype.isValidContent = function (e) {
        var rtn = e.detail && Array.isArray(e.detail) ? true : false;
        // console.log(rtn);
        return rtn;
    };
    NxTableRowDetailBComponent.prototype.printClick = function (_event) {
        this.printEvent.emit(_event);
    };
    NxTableRowDetailBComponent.prototype.downloadClick = function (_event) {
        this.downloadEvent.emit(_event);
    };
    NxTableRowDetailBComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-table-row-detail-b',
                    template: "\n    <!-- Secci\u00F3n de datos -->\n    <section class=\"expand-section\">\n      <div *ngIf=\"content.detail?.error\">\n        {{ content.detail.message }}\n      </div>\n\n      <div class=\"columnsDetail\" *ngIf=\"isValidContent(content)\">\n        <div class=\"grid\">\n          <div *ngFor=\"let detalles of content.detail\" class=\"{{content.parent.columnsDetail ? content.parent.columnsDetail : 'col-12'}}\">\n              <p><b>{{detalles.label}}</b></p>\n              <p>{{detalles.value}}</p>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- Secci\u00F3n de botones de acci\u00F3n, solo se muestra si son detalles de Cuenta -->\n    <section class=\"grid-noBottom master-detail actions\" *ngIf=\"isValidContent(content)\">\n      <div *ngIf=\"content.parent.actionButtons?.includes('download')\" class=\"col text-center\">\n        <div class=\"detail-link\" (click)=\"downloadClick(content)\">\n          <span class=\"icon ion-android-download\"></span> {{content.parent.actionButtonsLabels[0] ? content.parent.actionButtonsLabels[0] : '' }}\n        </div>\n      </div>\n      <div *ngIf=\"content.parent.actionButtons?.includes('print')\" class=\"col text-center\">\n        <div class=\"detail-link\" (click)=\"printClick(content)\">\n          <span class=\"icon ion-printer\"></span> {{content.parent.actionButtonsLabels[1] ? content.parent.actionButtonsLabels[1] : '' }}\n        </div>\n      </div>\n      <div\n        *ngIf=\"content.parent.actionButtons?.includes('detail') && reference.includes(content.parent.buttonDisplayReference)\"\n        class=\"col\">\n        <div class=\"detail-link\" (click)=\"showClick(content)\">\n          <span class=\"icon ion-document-text\"></span> {{content.parent.actionButtonsLabels[2] ? content.parent.actionButtonsLabels[2] : '' }}\n        </div>\n      </div>\n    </section>\n  "
                },] },
    ];
    /** @nocollapse */
    NxTableRowDetailBComponent.ctorParameters = function () { return []; };
    NxTableRowDetailBComponent.propDecorators = {
        'content': [{ type: Input },],
        'reference': [{ type: Input },],
        'showEvent': [{ type: Output },],
        'downloadEvent': [{ type: Output },],
        'printEvent': [{ type: Output },],
    };
    return NxTableRowDetailBComponent;
}());
export { NxTableRowDetailBComponent };
//# sourceMappingURL=table-row-detail-b.component.js.map