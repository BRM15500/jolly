import { ElementRef, AfterViewInit, OnDestroy, AfterViewChecked, Renderer2, NgZone } from '@angular/core';
import { Confirmation } from '../../models/confirm';
import { ConfirmationService } from '../../services/confirm.service';
import { Subscription } from 'rxjs/Subscription';
export declare class ConfirmDialogComponent implements AfterViewInit, AfterViewChecked, OnDestroy {
    el: ElementRef;
    renderer: Renderer2;
    private confirmationService;
    zone: NgZone;
    question: string;
    icon: string;
    header: string;
    message: string;
    acceptIcon: string;
    acceptLabel: string;
    acceptVisible: boolean;
    rejectIcon: string;
    rejectLabel: string;
    rejectVisible: boolean;
    acceptButtonStyleClass: string;
    rejectButtonStyleClass: string;
    width: any;
    height: any;
    closeOnEscape: boolean;
    rtl: boolean;
    closable: boolean;
    responsive: boolean;
    appendTo: any;
    key: string;
    lblOkBtn: string;
    lblCancelBtn: string;
    nxId: string;
    confirmation: Confirmation;
    _visible: boolean;
    documentEscapeListener: any;
    documentResponsiveListener: any;
    mask: any;
    contentContainer: any;
    positionInitialized: boolean;
    subscription: Subscription;
    executePostShowActions: boolean;
    constructor(el: ElementRef, renderer: Renderer2, confirmationService: ConfirmationService, zone: NgZone);
    visible: boolean;
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    center(): void;
    enableModality(): void;
    disableModality(): void;
    close(event: Event): void;
    hide(): void;
    bindGlobalListeners(): void;
    unbindGlobalListeners(): void;
    ngOnDestroy(): void;
    accept(): void;
    reject(): void;
}
