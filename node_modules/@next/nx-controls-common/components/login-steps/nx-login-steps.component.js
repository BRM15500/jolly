import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Router } from '@angular/router';
var LoginStepsComponent = /** @class */ (function () {
    function LoginStepsComponent(router) {
        this.router = router;
        this.helpEvent = new EventEmitter();
        this.recoveryEvent = new EventEmitter();
        this.nextEvent = new EventEmitter();
        this.submitEvent = new EventEmitter();
        this.cancelEvent = new EventEmitter();
        this.redirEvent = new EventEmitter();
        this.onBlur = new EventEmitter();
        this.step = 1;
        this.restrictionMessage = {
            header: "Seguimos mejorando",
            content: "¡Descarga ya! la App!.",
            imgButton: [{ url: "#", img: "../../../../assets/img/appstore.png" }, { url: "#", img: "../../../../assets/img/appstore.png" }],
            footer: "Si deseas realizar ...",
        };
        this.restrictionActive = true;
        this.lockMessage = {
            title: 'Se terminaron los intentos',
            paragraph: 'Por tu seguridad y disposiciones oficiales requerimos acceder a tu ubicación. Habilita esta opción desde tu navegador para acceder a tu Banca Electronica.'
        };
        this.geoCheckAuth = false;
        this.logoUrl = '/assets/img/logo.png';
        this.geoFlag = true;
        this.userName = '';
        this.settings = {
            stepOne: {
                inputLabel: 'Escribe tu usuario',
                inputMinChars: 8,
                inputMaxChars: 10,
                browserVersionsRef: ''
            },
            stepTwo: {
                inputLabel: 'Escribe tu password',
                inputMinChars: 8,
                inputMaxChars: 10,
                browserVersionsRef: ''
            },
            stepThree: {
                inputLabel: 'Escribe tu token',
                inputMinChars: 6,
                inputMaxChars: 6
            }
        };
        this.geoLocation = {
            banca: 'Banregio',
            pdf1: '../../../../assets/test.pdf',
            pdf2: '../../../../assets/test.pdf',
        };
        this.errorMessage = '';
        this.errorMessageChange = new EventEmitter();
        this.geoAuthorization = new EventEmitter();
        this.nxId = 'nx-login-steps';
        this.aviso = {
            primero: "Tu Banca Electrónica NUNCA te pedirá:",
            lista1: "-Usuario, contraseña o token por correo o vía telefónica.",
            lista2: "-Información personal o confidencial por ningún medio.",
            lista3: "-Instalar software o descargar aplicaciones/archivos en tu computadora.",
            ultimo: "Mantén actualizado tu antivirus y consulta los consejos básicos de seguridad en nuestro portal en la sección Conoce más > Seguridad Digital."
        };
        this.muestraAviso = true;
        this.notMeUrl = '/';
        this.contactInfo = [
            { place: 'Monterrey', phone: '2267 3446', description: '(BANREGIO)' },
            { place: 'Resto del país', phone: '01 81 2267 3446', description: '(BANREGIO)' },
            { place: 'EUA y Canadá', phone: '1 866 4320 550', description: '' }
        ];
        this.flag = true;
        this.lockMessageGeo = {
            title: 'Importante',
            description: 'La banca empresarial se encuentra fuera de servicio, por favor vuelve a intentarlo más tarde '
        };
    }
    LoginStepsComponent.prototype.ngOnInit = function () { };
    LoginStepsComponent.prototype.onBlurEvent = function (e) {
        this.onBlur.emit(e);
    };
    LoginStepsComponent.prototype.helpFn = function (e) {
        this.helpEvent.emit(e);
    };
    LoginStepsComponent.prototype.recoveryFn = function (e) {
        this.recoveryEvent.emit(e);
        this.changeMessage();
    };
    LoginStepsComponent.prototype.nextFn = function (e) {
        this.nextEvent.emit(e);
        this.changeMessage();
    };
    LoginStepsComponent.prototype.geoAuthFn = function (e) {
        this.geoAuthorization.emit(e);
    };
    LoginStepsComponent.prototype.loginFn = function (e) {
        this.submitEvent.emit(e);
        this.changeMessage();
    };
    LoginStepsComponent.prototype.cancelFn = function (e) {
        this.cancelEvent.emit(e);
        this.changeMessage();
    };
    LoginStepsComponent.prototype.redirectEvent = function (e) {
        this.redirEvent.emit(e);
    };
    LoginStepsComponent.prototype.changeMessage = function () {
        this.errorMessage = '';
        this.errorMessageChange.emit(this.errorMessage);
    };
    LoginStepsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-login-steps',
                    template: "\n    <nx-login-step-one *ngIf=\"step === 1\" id=\"{{ nxId }}-one\" (helpEvent)=\"helpFn($event)\" (nextEvent)=\"nextFn($event)\" [inputSettings]=\"settings.stepOne\" [(errorMsg)]=\"errorMessage\" [logoUrl]=\"logoUrl\" [contactInfo]=\"contactInfo\" [restrictionActive]=\"restrictionActive\" [restrictionMessage]=\"restrictionMessage\">\n    </nx-login-step-one>\n\n    <nx-login-step-two *ngIf=\"step === 2\" id=\"{{ nxId }}-two\" (cancelEvent)=\"cancelFn($event)\" (recoveryEvent)=\"recoveryFn($event)\" (nextEvent)=\"nextFn($event)\" [userName]=\"userName\" [inputSettings]=\"settings.stepTwo\" [(errorMsg)]=\"errorMessage\" [logoUrl]=\"logoUrl\"\n        [contactInfo]=\"contactInfo\" [notMeUrl]=\"notMeUrl\" [aviso]=\"aviso\" [muestraAviso]=\"muestraAviso\" [flag]=\"flag\" [lockMessage]=\"lockMessage\" (geoAuth)=\"geoAuthFn($event)\" [geoLocation]=\"geoLocation\" [geoCheckAuth]=\"geoCheckAuth\">\n    </nx-login-step-two> \n\n    <nx-login-step-three *ngIf=\"step === 3\" id=\"{{ nxId }}-three\" (cancelEvent)=\"cancelFn($event)\" (nextEvent)=\"loginFn($event)\" [inputSettings]=\"settings.stepThree\" [(errorMsg)]=\"errorMessage\" [logoUrl]=\"logoUrl\" [contactInfo]=\"contactInfo\" [geoFlag]=\"geoFlag\" [lockMessage]=\"lockMessageGeo\">\n    </nx-login-step-three>\n\n    <nx-login-step-four *ngIf=\"step === 4\" id=\"{{ nxId }}-four\" (redirectEvent)=\"redirectEvent($event)\"  (cancelEvent)=\"cancelFn($event)\" (recoveryEvent)=\"recoveryFn($event)\" (nextEvent)=\"loginFn($event)\" [userName]=\"userName\" [inputSettingsToken]=\"settings.stepThree\" [inputSettings]=\"settings.stepTwo\" [(errorMsg)]=\"errorMessage\" [logoUrl]=\"logoUrl\"\n    [contactInfo]=\"contactInfo\" [notMeUrl]=\"notMeUrl\" [aviso]=\"aviso\" [muestraAviso]=\"muestraAviso\" [flag]=\"flag\" [lockMessage]=\"lockMessage\" (geoAuth)=\"geoAuthFn($event)\" [geoLocation]=\"geoLocation\" [geoCheckAuth]=\"geoCheckAuth\" (onBlur)=\"onBlurEvent($event)\"></nx-login-step-four>\n  ",
                    styles: ["\n\n  "]
                },] },
    ];
    /** @nocollapse */
    LoginStepsComponent.ctorParameters = function () { return [
        { type: Router, },
    ]; };
    LoginStepsComponent.propDecorators = {
        'helpEvent': [{ type: Output },],
        'recoveryEvent': [{ type: Output },],
        'nextEvent': [{ type: Output },],
        'submitEvent': [{ type: Output },],
        'cancelEvent': [{ type: Output },],
        'redirEvent': [{ type: Output },],
        'onBlur': [{ type: Output },],
        'step': [{ type: Input },],
        'restrictionMessage': [{ type: Input },],
        'restrictionActive': [{ type: Input },],
        'lockMessage': [{ type: Input },],
        'geoCheckAuth': [{ type: Input },],
        'logoUrl': [{ type: Input },],
        'geoFlag': [{ type: Input },],
        'userName': [{ type: Input },],
        'settings': [{ type: Input },],
        'geoLocation': [{ type: Input },],
        'errorMessage': [{ type: Input },],
        'errorMessageChange': [{ type: Output },],
        'geoAuthorization': [{ type: Output },],
        'nxId': [{ type: Input },],
        'aviso': [{ type: Input },],
        'muestraAviso': [{ type: Input },],
        'notMeUrl': [{ type: Input },],
        'contactInfo': [{ type: Input },],
        'flag': [{ type: Input },],
        'lockMessageGeo': [{ type: Input },],
    };
    return LoginStepsComponent;
}());
export { LoginStepsComponent };
//# sourceMappingURL=nx-login-steps.component.js.map